@using Bibliotech.Base
@using Bibliotech.Models
@using PagedList
@using PagedList.Mvc

@{
    ViewBag.Action = "Empréstimos";
    ViewBag.Title = "Anteriores";
}

@model Tuple<IPagedList<Emprestimo>, Emprestimo>


<div class="table-responsive">
    <div class="panel-heading">
        <div class="row border-bottom" style="margin-left: 0px; margin-right: 0px;">
            @Html.Partial("~/Views/Shared/_PageHeader.cshtml")
        </div>
    </div>

    @if (Model.Item1.Count > 0)
    {
        var usuarioLogado = Functions.GetCurrentUser();

        <table class="table table-striped">
            <thead>
                <tr class="d-flex">
                    <th class="col-3">Início</th>
                    <th class="col-3">Fim</th>
                    @if (usuarioLogado.Perfil != Perfil.Padrao)
                    {
                        <th class="col-3">Emprestante</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Item1)
                {
                    <tr class="d-flex">
                        <td class="col-3">@(item.DataInicio.Value.ToString("dd/MM/yyyy"))</td>
                        <td class="col-3">@(item.DataFim.Value.ToString("dd/MM/yyyy"))</td>
                        @if (usuarioLogado.Perfil != Perfil.Padrao)
                        {
                            <td class="col-3">@(item.Usuario.Nome)</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <br />
        <div class="alert alert-secondary" role="alert">
            Nenhum registro encontrado.
        </div>
    }

    @if (Model.Item1.HasNextPage || Model.Item1.HasPreviousPage)
    {
        <div class="text-center">
            @Html.PagedListPager(Model.Item1, (page) => Url.Action("ListarEmprestimosAnteriores",
                                  new RouteValueDictionary
                         {   { "page", page }
                        }), PagedListRenderOptions.ClassicPlusFirstAndLast)
        </div>
    }

</div>

@section Scripts{
    @Scripts.Render("~/Scripts/Util.js")
}

